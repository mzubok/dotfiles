# Add `~/.bin` to the `$PATH`
export PATH="$HOME/.bin:$PATH";

export TERM="xterm-256color"

# Init antigen
source /usr/local/share/antigen/antigen.zsh

# Load the oh-my-zsh's library
antigen use oh-my-zsh

antigen bundles <<EOBUNDLES
    
    brew
    docker
    docker-compose
    forklift
    git
    gradle
    helm
    httpie
    kubectl
    # ssh-agent
    sublime
    terraform
    thefuck
    vagrant
    vault
    vscode
    
    # Syntax highlighting bundle.
    zsh-users/zsh-syntax-highlighting

    # Extra zsh completions
    zsh-users/zsh-completions

    # Fish-like auto suggestions
    zsh-users/zsh-autosuggestions

    # Pure prompt
    mafredri/zsh-async
    sindresorhus/pure
    
    # Makes directory listings more readable
    supercrabtree/k

EOBUNDLES

# Load refined theme (ex pure)
# antigen theme refined

# Tell antigen that you're done
antigen apply

# Configure fuck alias
eval "$(thefuck --alias)"

# Set Default Editor
export EDITOR='code'

# Source local extra (private) settings specific to machine if it exists
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

source ~/.bin/aliases.zsh
source ~/.bin/config.zsh
source ~/.bin/functions.zsh

# fortune: brew install fortune ponysay
# fortune | ponysay

# GNU Sed
SED_PATH="/usr/local/opt/gnu-sed/libexec/gnubin"
# GNU Core Utilities
COREUTILS_PATH="/usr/local/opt/coreutils/libexec/gnubin"
# Visual Studio Code (code)
VSCODE_PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

PATH="$SED_PATH:$COREUTILS_PATH:$VSCODE_PATH:$PATH"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="~/.sdkman"
[[ -s "~/.sdkman/bin/sdkman-init.sh" ]] && source "~/.sdkman/bin/sdkman-init.sh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/share/gcloud-sdk/path.zsh.inc' ]; then . '/usr/local/share/gcloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/share/gcloud-sdk/completion.zsh.inc' ]; then . '/usr/local/share/gcloud-sdk/completion.zsh.inc'; fi
